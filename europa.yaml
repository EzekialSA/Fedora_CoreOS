variant: fcos
version: 1.4.0
passwd:
  users:
    - name: core
      groups:
        - docker
      ssh_authorized_keys:
        - ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBLE9gYf9OQSkf7DJNgZjP6K0eq85PiloAQJfZ6kNSZQv9xMorHQEfyMxlKZO70+EtipKfxL6ZEjhX+pXCY/Fsps= sandrews@io.andrewspolytechnic.com
storage:
  files:
    - path: /etc/zincati/config.d/55-updates-strategy.toml
      contents:
        inline: |
          [updates]
          strategy = "periodic"

          [updates.periodic]
          time_zone = "US/Eastern"

          [[updates.periodic.window]]
          days = [ "Sun" ]
          start_time = "5:30"
          length_minutes = 30

          [[updates.periodic.window]]
          days = [ "Wed", "Fri" ]
          start_time = "02:00"
          length_minutes = 60

    - path: /etc/hostname
      mode: 0644
      contents:
        inline: |
          europa.andrewspolytechnic.com
    - path: /etc/profile.d/systemd-pager.sh
      mode: 0644
      contents:
        inline: |
          # Tell systemd to not use a pager when printing information
          export SYSTEMD_PAGER=cat
    - path: /etc/sysctl.d/20-silence-audit.conf
      mode: 0644
      contents:
        inline: |
          # Raise console message logging level from DEBUG (7) to WARNING (4)
          # to hide audit messages from the interactive console
          kernel.printk=4
  filesystems:
    - path: /var/mnt/ssdstore
      device: /dev/disk/by-id/scsi-0QEMU_QEMU_HARDDISK_drive-scsi1-part1
      format: ext4
      with_mount_unit: true
systemd:
  units:
    - name: rpm-ostree-install.service
      enabled: true
      contents: |
        [Unit]
        Description=Install Cockpit
        Wants=network-online.target
        After=network-online.target
        # We run before `zincati.service` to avoid conflicting rpm-ostree
        # transactions.
        Before=zincati.service
        ConditionPathExists=!/var/lib/%N.stamp

        [Service]
        Type=oneshot
        RemainAfterExit=yes
        # `--allow-inactive` ensures that rpm-ostree does not return an error
        # if the package is already installed. This is useful if the package is
        # added to the root image in a future Fedora CoreOS release as it will
        # prevent the service from failing.
        ExecStart=/usr/bin/rpm-ostree install --apply-live --allow-inactive docker-compose
        ExecStart=/bin/touch /var/lib/%N.stamp

        [Install]
        WantedBy=multi-user.target

    - name: rsyncfiles.service
      contents: |
        [Unit]
        Description=rsyncfiles
        Requires=var-mnt-ssdstore-scan.mount
        [Service]
        Type=oneshot
        ExecStart=/usr/bin/sh /mnt/ssdstore/config/4scan/rsync.sh

    - name: rsyncfiles.timer
      enabled: true
      contents: |
        [Unit]
        Description=rsyncfiles

        [Timer]
        OnCalendar=*-*-* 07:00:00
        Persistent=true

        [Install]
        WantedBy=timers.target

    - name: var-mnt-ssdstore-scan.mount
      enabled: true
      contents: |
        [Unit]
        Description=Mount data directory

        [Mount]
        What=192.168.5.20:/media/iomfspool/ARCHIVE/Real/4scanner
        Where=/var/mnt/ssdstore/scan
        Type=nfs

        [Install]
        WantedBy=multi-user.target
    
    - name: docker.portainer.service
      enabled: true
      contents: |-
        [Unit]
        Description=Portainer Admin Container
        After=docker.service
        Requires=docker.service network.target network-online.target

        [Service]
        Type=oneshot
        RemainAfterExit=yes
        TimeoutStartSec=0
        ExecStartPre=/usr/sbin/modprobe tun
        ExecStartPre=-/usr/bin/docker stop %n
        ExecStartPre=-/usr/bin/docker rm %n
        ExecStartPre=/usr/bin/docker pull portainer/portainer-ce
        # Privileged mode is required for binding to local socket to work due to SELINUX (https://github.com/portainer/portainer/issues/849)
        ExecStart=/usr/bin/docker run --privileged=true -d -p 9000:9000 --name %n --restart always -v /var/run/docker.sock:/var/run/docker.sock -v /var/mnt/ssdstore/config/portainer:/data portainer/portainer-ce
        ExecStop=/usr/bin/docker stop -t 15 %n

        [Install]
        WantedBy=multi-user.target

    - name: docker-compose.service
      enabled: true
      contents: |-
        [Unit]
        Description=Docker Compose Up
        After=rpm-ostree-install.service
        Requires=docker.service var-mnt-ssdstore-scan.mount
        [Service]
        Type=forking
        RemainAfterExit=yes
        ExecStartPre=/usr/sbin/setsebool virt_use_nfs 0 -P
        ExecStartPre=/usr/sbin/setsebool nfs_export_all_rw 0 -P
        ExecStartPre=/usr/sbin/setsebool nfs_export_all_ro 0 -P
        ExecStartPre=/usr/sbin/setsebool rsync_full_access 1 -P
        ExecStartPre=/usr/bin/docker-compose -f /mnt/ssdstore/config/compose/docker-compose.yml down
        ExecStart=/usr/bin/docker-compose -f /mnt/ssdstore/config/compose/docker-compose.yml up -d 
        ExecStop=/usr/bin/docker-compose -f /mnt/ssdstore/config/compose/docker-compose.yml down
        WorkingDirectory=/mnt/ssdstore/config/compose

        [Install]
        WantedBy=multi-user.target

        